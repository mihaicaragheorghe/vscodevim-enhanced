{
  "name": "vim-enhanced",
  "displayName": "Vim Enhanced",
  "publisher": "mcaragheorghe",
  "author": {
    "name": "Mihai Caragheorghe",
    "email": "mihaicaragheorghe96@gmail.com",
    "url": "https://github.com/mihaicaragheorghe"
  },
  "description": "Keymaps for VSCodeVim extension to provide a more native Vim experience in VS Code. Inspired by Neovim configurations. ",
  "license": "MIT",
  "version": "1.0.0",
  "icon": "assets/logo.png",
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Keymaps",
    "Other"
  ],
  "keywords": [
    "keymap",
    "keybindings",
    "enhanced",
    "vim",
    "neovim"
  ],
  "repository": {
    "url": "https://github.com/mihaicaragheorghe/vscodevim-enhanced"
  },
  "bugs": {
    "url": "https://github.com/mihaicaragheorghe/vscodevim-enhanced/issues"
  },
  "extensionDependencies": [
    "vscodevim.vim"
  ],
  "extensionPack": [
    "vscodevim.vim"
  ],
  "pricing": "Free",
  "contributes": {
    "configurationDefaults": {
      "vim.leader": "space",
      "vim.showcmd": true,
      "vim.showmodename": true,
      "editor.lineNumbers": "relative",
      "editor.cursorSurroundingLines": 10,
      "vim.highlightedyank.enable": true,
      "vim.highlightedyank.color": "#a9dc7660",
      "vim.ignorecase": true,
      "vim.smartcase": true,
      "vim.incsearch": true,
      "vim.hlsearch": true,
      "vim.inccommand": "replace",
      "vim.replaceWithRegister": true,
      "vim.useCtrlKeys": true,
      "vim.handleKeys": {
        "<C-space>": false,
        "<C-h>": false,
        "<C-j>": false,
        "<C-k>": false,
        "<C-l>": false,
        "<C-s>": false,
        "<C-d>": true
      },
      "vim.normalModeKeyBindingsNonRecursive": [
        {
          "before": [ "<C-p>" ],
          "commands": [ "workbench.action.quickOpen" ],
          "when": "!suggestWidgetVisible && editorHasSignatureHelpProvider && editorTextFocus"
        },
        {
          "before": [ "<leader>", "e" ],
          "commands": [ "workbench.action.toggleSidebarVisibility" ]
        },
        {
          "before": [ "tab" ],
          "commands": [ "workbench.action.nextEditor" ],
          "when": "editorTextFocus"
        },
        {
          "before": [ "shift+tab" ],
          "commands": [ "workbench.action.previousEditor" ],
          "when": "editorTextFocus"
        },
        {
          "before": [ "<leader>", "g", "e" ],
          "commands": [ "workbench.view.explorer" ]
        },
        {
          "before": [ "<leader>", "f" ],
          "commands": [ "editor.action.formatDocument" ]
        },
        {
          "before": [ "<leader>", "z", "z" ],
          "commands": [ "workbench.action.toggleZenMode" ]
        },
        {
          "before": [ "<leader>", "r" ],
          "commands": [ "editor.action.rename" ]
        },
        {
          "before": [ "<Esc>" ],
          "commands": [ ":nohl" ]
        },
        {
          "before": [ "<leader>", "y" ],
          "after": [ "\"", "+", "y" ]
        },
        {
          "before": [ "<C-d>" ],
          "after": [ "<C-d>", "z", "z" ]
        },
        {
          "before": [ "<C-u>" ],
          "after": [ "<C-u>", "z", "z" ]
        },
        {
          "before": [ "n" ],
          "after": [ "n", "z", "z" ]
        },
        {
          "before": [ "N" ],
          "after": [ "N", "z", "z" ]
        },
        {
          "before": [ "<leader>", "d" ],
          "after": [ "\"", "_", "d" ]
        },
        {
          "before": [ "x" ],
          "after": [ "\"", "_", "x" ]
        },
        {
          "before": [ "<leader>", "y" ],
          "after": [ "\"", "+", "y" ]
        },
        {
          "before": [ "<leader>", "Y" ],
          "after": [ "\"", "+", "Y" ]
        },
        {
          "before": [ "<leader>", "p" ],
          "after": [ "\"", "+", "p" ]
        },
        {
          "before": [ "K" ],
          "commands": [ "editor.action.showDefinitionPreviewHover" ]
        },
        {
          "before": [ "<leader>", "c", "a" ],
          "commands": [ "editor.action.quickFix" ],
          "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
        },
        {
          "before": [ "<C-.>" ],
          "commands": [ "editor.action.quickFix" ],
          "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
        },
        {
          "before": [ "g", "d" ],
          "commands": [ "editor.action.revealDefinition" ]
        },
        {
          "before": [ "g", "p", "d" ],
          "commands": [ "editor.action.peekDefinition" ]
        },
        {
          "before": [ "g", "I" ],
          "commands": [ "editor.action.goToImplementation" ]
        },
        {
          "before": [ "g", "p", "I" ],
          "commands": [ "editor.action.peekImplementation" ]
        },
        {
          "before": [ "g", "D" ],
          "commands": [ "editor.action.revealDeclaration" ]
        },
        {
          "before": [ "g", "r" ],
          "commands": [ "editor.action.referenceSearch.trigger" ]
        },
        {
          "before": [ "g", "t" ],
          "commands": [ "editor.action.goToTypeDefinition" ]
        },
        {
          "before": [ "g", "p", "t" ],
          "commands": [ "editor.action.peekTypeDefinition" ]
        },
        {
          "before": [ "]", "d" ],
          "commands": [ "editor.action.marker.next" ],
          "when": "editorFocus"
        },
        {
          "before": [ "[", "d" ],
          "commands": [ "editor.action.marker.prev" ],
          "when": "editorFocus"
        },
        {
          "before": [ "<leader>", "w" ],
          "commands": [ "workbench.action.files.save" ],
          "when": "editorFocus"
        },
        {
          "before": [ "<leader>", "<leader>" ],
          "commands": [ "workbench.action.showCommands" ]
        },
        {
          "before": [ "<leader>", "s", "f" ],
          "commands": [ "workbench.action.quickOpen" ]
        },
        {
          "before": [ "<leader>", "s", "s" ],
          "commands": [ "workbench.action.gotoSymbol" ],
          "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
        },
        {
          "before": [ "<leader>", "/" ],
          "commands": [ "workbench.action.findInFiles" ]
        },
        {
          "before": [ "<leader>", "g", "d" ],
          "commands": [ "workbench.view.debug" ],
          "when": "viewContainer.workbench.view.debug.enabled"
        },
        {
          "before": [ "<leader>", "g", "s" ],
          "commands": [ "workbench.view.scm" ],
          "when": "workbench.scm.active"
        },
        {
          "before": [ "<leader>", "t", "t" ],
          "commands": [ "workbench.actions.view.problems" ],
          "when": "workbench.panel.markers.view.active"
        },
        {
          "before": [ "<C-`>" ],
          "commands": [ "workbench.action.terminal.toggleTerminal" ],
          "when": "terminal.active"
        }
      ],
      "vim.visualModeKeyBindings": [
        {
          "before": [ "<leader>", "y" ],
          "after": [ "\"", "+", "y" ]
        },
        {
          "before": [ "<leader>", "d" ],
          "after": [ "\"", "_", "d" ]
        },
        {
          "before": [ "<leader>", "p" ],
          "after": [ "\"", "_", "d", "P" ]
        },
        {
          "before": [ "J" ],
          "after": [ ":", "m", " ", "'", ">", "+", "1", "<CR>", "V"]
        },
        {
          "before": [ "K" ],
          "after": [ ":", "m", " ", "'", ">", "-", "2", "<CR>", "V"]
        },
        {
          "before": [ "<" ],
          "after": [ "<", "g", "v", "^" ]
        },
        {
          "before": [ ">" ],
          "after": [ ">", "g", "v", "^" ]
        }
      ],
      "vim.insertModeKeyBindings": [
        {
          "before": [ "<C-p>" ],
          "commands": [ "editor.action.triggerParameterHints" ]
        }
      ]
    },
    "keybindings": [
      {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft"
      },
      {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown"
      },
      {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
      },
      {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
      },
      {
        "key": "ctrl+k",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
      },
      {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight"
      },
      {
        "key": "ctrl+l",
        "when": "sideBarFocus",
        "command": "workbench.action.focusActiveEditorGroup"
      },
      {
        "key": "ctrl+n",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
      },
      {
        "key": "ctrl+p",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
      },
      {
        "key": "ctrl+y",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+n",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible"
      },
      {
        "key": "ctrl+p",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
      },
      {
        "key": "ctrl+y",
        "command": "acceptSelectedCodeAction",
        "when": "codeActionMenuVisible"
      },
      {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
      },
      {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
      },
      {
        "key": "h",
        "command": "editor.action.scrollLeftHover",
        "when": "editorHoverFocused"
      },
      {
        "key": "j",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused"
      },
      {
        "key": "k",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused"
      },
      {
        "key": "l",
        "command": "editor.action.scrollRightHover",
        "when": "editorHoverFocused"
      },
      {
        "key": "h",
        "command": "list.collapse",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
      },
      {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "o",
        "command": "list.toggleExpand",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
      },
      {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
      },
      {
        "key": "%",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
      },
      {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
      },
      {
        "key": "d",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
      },
      {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "D",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
      },
      {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
      },
      {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "v",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
      },
      {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
      },
      {
        "key": "ctrl+w o",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
      }
    ]
  }
}
